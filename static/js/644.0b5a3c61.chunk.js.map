{"version":3,"file":"static/js/644.0b5a3c61.chunk.js","mappings":"mSAUe,SAASA,IACtB,OAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,GAA0CL,EAAAA,EAAAA,UAAS,CACjDM,MAAO,GACPC,SAAU,GACVC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,gBAAiB,KANnB,eAAOC,EAAP,KAAsBC,EAAtB,KASIC,OAAQC,EAUVD,EATGb,GAUD,SAACe,EAAA,EAAD,CACEJ,cAAeA,EACfC,iBAAkBA,EAClBX,cAAeA,KAXjB,SAACe,EAAA,EAAD,CACEL,cAAeA,EACfC,iBAAkBA,EAClBX,cAAeA,IAoBrB,OAFgBE,EAAAA,EAAAA,IAAYc,EAAAA,KAGnB,SAAC,KAAD,CAAUC,GAAG,WAIpB,SAAC,KAAD,CAAMC,KAAK,QAAX,UACE,UAAC,KAAD,WACGjB,GAASkB,EAAAA,OAAAA,QAAelB,EAAMmB,QAdf,CACpBC,oBAAoB,EACpBC,QAAS,OAaL,SAAC,KAAD,UAAsBV,QAI7B,C","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { BackgroundContainer } from '../../components/Auth/Auth.styled';\nimport FirstStep from '../../components/Auth/RegisterForm/FirstStep';\nimport SecondStep from '../../components/Auth/RegisterForm/SecondStep';\nimport { selectError, selectIsLogin } from 'redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { Container, Main } from 'styles';\nimport { Notify } from 'notiflix';\n\nexport default function RegisterPage() {\n  const [secondPage, setSecondPage] = useState(false);\n  const error = useSelector(selectError);\n  const [registerState, setRegisterState] = useState({\n    email: '',\n    password: '',\n    name: '',\n    city: '',\n    phone: '',\n    confirmPassword: '',\n  });\n\n  let Child = undefined;\n  if (!secondPage) {\n    Child = (\n      <FirstStep\n        registerState={registerState}\n        setRegisterState={setRegisterState}\n        setSecondPage={setSecondPage}\n      />\n    );\n  } else {\n    Child = (\n      <SecondStep\n        registerState={registerState}\n        setRegisterState={setRegisterState}\n        setSecondPage={setSecondPage}\n      />\n    );\n  }\n\n  const notifyOptions = {\n    showOnlyTheLastOne: true,\n    timeout: 2000,\n  };\n\n  const isLogin = useSelector(selectIsLogin);\n\n  if (isLogin) {\n    return <Navigate to=\"/user\" />;\n  }\n\n  return (\n    <Main page=\"login\">\n      <Container>\n        {error && Notify.failure(error.message, notifyOptions)}\n        <BackgroundContainer>{Child}</BackgroundContainer>\n      </Container>\n    </Main>\n  );\n}\n"],"names":["RegisterPage","useState","secondPage","setSecondPage","error","useSelector","selectError","email","password","name","city","phone","confirmPassword","registerState","setRegisterState","Child","undefined","SecondStep","FirstStep","selectIsLogin","to","page","Notify","message","showOnlyTheLastOne","timeout"],"sourceRoot":""}