{"version":3,"file":"static/js/606.d155bc7e.chunk.js","mappings":"6PAGaA,EAAOC,EAAAA,QAAAA,KAAH,iMAWJC,EAAUD,EAAAA,QAAAA,IAAH,yFAMPE,EAAQF,EAAAA,QAAAA,MAAH,iEAKLG,EAAQH,EAAAA,QAAAA,MAAH,+aAiBMI,EAAAA,EAAAA,OAAAA,QAIXC,EAAYL,EAAAA,QAAAA,OAAH,2J,yDCQtB,EA9CsB,SAAC,GAAiB,EAAfM,SAAgB,IACvC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,ECRO,SAAqBC,EAAOC,GACzC,OAA4CL,EAAAA,EAAAA,UAASI,GAArD,eAAOE,EAAP,KAAuBC,EAAvB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAkBH,EACnB,GAAEC,GAEH,OAAO,WACLM,aAAaF,EACd,CACF,GAAE,CAACL,EAAOC,IAEJC,CACR,CDNyBM,CAAYX,EAAa,KAE3CY,GAAWC,EAAAA,EAAAA,OAEjBN,EAAAA,EAAAA,YAAU,WACRK,GAASE,EAAAA,EAAAA,GAAUZ,GACpB,GAAE,CAACU,EAAUV,IAUd,OACE,SAACX,EAAD,WACE,UAACE,EAAD,CAASsB,MAAO,CAAEC,SAAU,YAA5B,WACE,SAACtB,EAAD,CAAOuB,QAAQ,iBACf,SAACtB,EAAD,CACEuB,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,YAAY,SACZC,SAjBa,SAAAC,GACnBtB,EAAesB,EAAEC,cAAcrB,MAAMsB,cACtC,EAgBOtB,MAAOH,KAET,gBAAKe,MAAO,CAAEC,SAAU,WAAYU,MAAO,OAAQC,IAAK,QAAxD,SACGC,QAAQ5B,EAAY6B,OAAS,IAC5B,SAAChC,EAAD,CAAWqB,KAAK,SAAhB,UACE,SAAC,MAAD,CAAUY,QAAS,WAlB7B7B,EAAe,GAkBc,OAGrB,SAACJ,EAAD,CAAWqB,KAAK,SAAhB,UACE,SAAC,MAAD,CAAiBa,KAAM,aAOpC,E,wCElDYC,EAAiBxC,EAAAA,QAAAA,IAAH,uFAMdC,EAAUD,EAAAA,QAAAA,IAAH,gS,kDCqDpB,EA3C0B,WACxB,IAAQyC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAE1B,GAA8BxC,EAAAA,EAAAA,UAC5ByC,OAAOC,WAAW,sBAAsBC,SAD1C,eAAOA,EAAP,KAAgBC,EAAhB,KAIM/B,GAAWC,EAAAA,EAAAA,MAajB,OAXAN,EAAAA,EAAAA,YAAU,WACJ4B,IACFvB,GAASgC,EAAAA,EAAAA,OACThC,GAASiC,EAAAA,EAAAA,QAGXL,OACGC,WAAW,sBACXK,iBAAiB,UAAU,SAAAvB,GAAC,OAAIoB,EAAWpB,EAAEmB,QAAjB,GAChC,GAAE,CAAC9B,EAAUqB,EAAcE,KAG1B,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAACH,EAAD,YACE,SAACe,EAAA,EAAD,CAAUC,MAAO,4BACjB,SAAC,EAAD,KACA,UAAC,EAAD,YACE,SAACC,EAAA,EAAD,IACCP,IAAW,SAACQ,EAAA,EAAD,QAEZR,IAAW,SAACS,EAAA,EAAD,KAEb,SAAC,KAAD,IAECb,GAASc,EAAAA,OAAAA,QAAeC,aAKlC,C","sources":["components/Notices/NoticesSearch/NoticesSearch.styled.jsx","components/Notices/NoticesSearch/NoticesSearch.jsx","hooks/useDebouce.js","pages/NoticesPage/NoticiesPage.styled.jsx","pages/NoticesPage/NoticesLayoutPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'styles/theme';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border: 1px solid transparent;\n  border-radius: 40px;\n  padding: 13px 40px 13px 20px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n  }\n\n  &:hover,\n  :focus {\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Form, Input, BtnSearch, Label, Wrapper } from './NoticesSearch.styled';\nimport { RxCross1 } from 'react-icons/rx';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport useDebounce from 'hooks/useDebouce';\nimport { useDispatch } from 'react-redux';\nimport { setSearch } from 'redux/search/search-slice';\n\nconst NoticesSearch = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const debouncedSearch = useDebounce(searchQuery, 500);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setSearch(debouncedSearch));\n  }, [dispatch, debouncedSearch]);\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const removeQuery = () => {\n    setSearchQuery('');\n  };\n\n  return (\n    <Form>\n      <Wrapper style={{ position: 'relative' }}>\n        <Label htmlFor=\"searchQuery\" />\n        <Input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          placeholder=\"Search\"\n          onChange={handleChange}\n          value={searchQuery}\n        />\n        <div style={{ position: 'absolute', right: '12px', top: '10px' }}>\n          {Boolean(searchQuery.length > 0) ? (\n            <BtnSearch type=\"submit\">\n              <RxCross1 onClick={() => removeQuery('erase')} />\n            </BtnSearch>\n          ) : (\n            <BtnSearch type=\"submit\">\n              <AiOutlineSearch size={20} />\n            </BtnSearch>\n          )}\n        </div>\n      </Wrapper>\n    </Form>\n  );\n};\n\nexport default NoticesSearch;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import styled from 'styled-components';\n\nexport const ContainerWrapp = styled.div`\n  width: 100%;\n  position: relative;\n  margin-bottom: 50px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  @media screen and (min-width: 320px) {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    margin-bottom: 44px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 60px;\n  }\n`;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport NoticesSearch from 'components/Notices/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/Notices/NoticesCategoriesNav/NoticesCategoriesNav';\nimport Headline from 'components/Headline/Headline';\nimport AddNoticeButton from 'components/Notices/AddNoticeButton/AddNoticeButton';\nimport AddNoticeButtonMobile from 'components/Notices/AddNoticeButton/AddNoticeButtonMobile';\nimport { ContainerWrapp, Wrapper } from './NoticiesPage.styled';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchFavoritesNotices,\n  fetchUserNotices,\n} from 'redux/notices/notices-operation';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { selectError } from 'redux/notices/notices-selectors';\nimport { selectIsLogin } from 'redux/auth/auth-selectors';\nimport { Container, Main } from 'styles';\n\nconst NoticesLayoutPage = () => {\n  const { categoryName } = useParams();\n  const isLoggedIn = useSelector(selectIsLogin);\n  const error = useSelector(selectError);\n\n  const [matches, setMatches] = useState(\n    window.matchMedia('(min-width: 768px)').matches\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchFavoritesNotices());\n      dispatch(fetchUserNotices());\n    }\n\n    window\n      .matchMedia('(min-width: 768px)')\n      .addEventListener('change', e => setMatches(e.matches));\n  }, [dispatch, categoryName, isLoggedIn]);\n\n  return (\n    <Main>\n      <Container>\n        <ContainerWrapp>\n          <Headline title={'Find your favorite pet'}></Headline>\n          <NoticesSearch />\n          <Wrapper>\n            <NoticesCategoriesNav />\n            {matches && <AddNoticeButton />}\n          </Wrapper>\n          {!matches && <AddNoticeButtonMobile />}\n\n          <Outlet />\n\n          {error && Notify.warning(Error)}\n        </ContainerWrapp>\n      </Container>\n    </Main>\n  );\n};\n\nexport default NoticesLayoutPage;\n"],"names":["Form","styled","Wrapper","Label","Input","theme","BtnSearch","onSubmit","useState","searchQuery","setSearchQuery","debouncedSearch","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","dispatch","useDispatch","setSearch","style","position","htmlFor","type","name","autoComplete","placeholder","onChange","e","currentTarget","toLowerCase","right","top","Boolean","length","onClick","size","ContainerWrapp","categoryName","useParams","isLoggedIn","useSelector","selectIsLogin","error","selectError","window","matchMedia","matches","setMatches","fetchFavoritesNotices","fetchUserNotices","addEventListener","Headline","title","NoticesCategoriesNav","AddNoticeButton","AddNoticeButtonMobile","Notify","Error"],"sourceRoot":""}