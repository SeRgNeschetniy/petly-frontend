{"version":3,"file":"static/js/559.4bb4ac0d.chunk.js","mappings":"gRAGaA,EAAOC,EAAAA,QAAAA,KAAH,iMAWJC,EAAUD,EAAAA,QAAAA,IAAH,wEAELE,EAAAA,EAAAA,OAAAA,QAIFC,EAAQH,EAAAA,QAAAA,MAAH,iEAKLI,EAAQJ,EAAAA,QAAAA,MAAH,qWAeME,EAAAA,EAAAA,OAAAA,QAIXG,EAAYL,EAAAA,QAAAA,OAAH,2J,uCCYtB,EAlDsB,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACvB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,UAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAmBA,OACE,SAACZ,EAAD,CAAMO,SAlBa,SAAAM,GACnBA,EAAEC,iBACkB,WAAhBH,GACyB,KAAvBF,EAAYM,QAKlBR,EAASE,GACTG,EAAe,WALXI,EAAAA,OAAAA,QAAe,0BAOpB,EAOC,UACE,UAACd,EAAD,CAASe,MAAO,CAAEC,SAAU,YAA5B,WACE,SAACd,EAAD,CAAOe,QAAQ,iBACf,SAACd,EAAD,CACEe,KAAK,OACLC,KAAK,cACLC,aAAa,MAEbC,YAAY,SACZC,SAda,SAAAX,GACnBH,EAAeG,EAAEY,cAAcC,MAAMC,cACtC,EAaOD,MAAOjB,KAET,gBAAKQ,MAAO,CAAEC,SAAU,WAAYU,MAAO,OAAQC,IAAK,QAAxD,SACGC,QAAQrB,EAAYsB,OAAS,IAC5B,SAACzB,EAAD,CAAWc,KAAK,SAAhB,UACE,SAAC,MAAD,CAAUY,QAAS,kBAAMpB,EAAe,QAArB,OAGrB,SAACN,EAAD,CAAWc,KAAK,SAAhB,UACE,SAAC,MAAD,CAAiBa,KAAM,aAOpC,E,wCCpDYC,EAAYjC,EAAAA,QAAAA,IAAH,qKAUTC,EAAUD,EAAAA,QAAAA,IAAH,uN,gFCTPkC,EAAkBlC,EAAAA,QAAAA,IAAH,yIASfmC,EAAQnC,EAAAA,QAAAA,IAAH,uLAcLoC,GALQpC,EAAAA,QAAAA,GAAH,mEAKcA,EAAAA,QAAAA,IAAH,wGAOhBqC,GAAsBrC,EAAAA,QAAAA,IAAH,gDAInBsC,GAAOtC,EAAAA,QAAAA,EAAH,6FAOJuC,GAAYvC,EAAAA,QAAAA,IAAH,gDAITwC,GAAgBxC,EAAAA,QAAAA,IAAH,gFAMbyC,GAAoBzC,EAAAA,QAAAA,IAAH,0BAIjB0C,GAAgB1C,EAAAA,QAAAA,IAAH,qLAUb2C,GAAc3C,EAAAA,QAAAA,OAAH,8mBACX,SAAA4C,GAAK,OAAIA,EAAMC,KAAO,OAAS,OAA1B,GAMI3C,EAAAA,EAAAA,OAAAA,QACA,SAAA0C,GAAK,OAAIA,EAAME,QAAU,QAAhB,UAA6B5C,EAAAA,EAAAA,OAAAA,OAAjC,GACLA,EAAAA,EAAAA,OAAAA,QAeE,SAAA0C,GAAK,OAAIA,EAAME,QAAN,UAAoB5C,EAAAA,EAAAA,OAAAA,QAAyB,SAAjD,IACL,SAAA0C,GAAK,OAAIA,EAAME,QAAN,UAAmB5C,EAAAA,EAAAA,OAAAA,QAAwB,SAA/C,IAQhB6C,GAAY/C,EAAAA,QAAAA,IAAH,wB,WC3EP,SAASgD,GAAT,GAAoC,IAAXC,EAAU,EAAVA,OAEhCC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,SAAA7C,GACrB,GAAIsC,EAAY,CACd,IAAMQ,EAAS9C,EAAE+C,OAAOC,GAClBC,EAASR,EAAUS,MAAK,SAAAC,GAAQ,OAAIA,IAAaL,CAAjB,IAEpCH,EADEM,IAAWH,GACJM,EAAAA,EAAAA,IAAoBN,IAEpBO,EAAAA,EAAAA,IAAcP,GAE1B,MAAM3C,GAAAA,OAAAA,QAAe,+BACvB,EAEKmD,EAAWjB,EAAOkB,KACtB,YAaO,IAZLC,EAYI,EAZJA,IACAC,EAWI,EAXJA,MACAjD,EAUI,EAVJA,KACAkD,EASI,EATJA,YACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,SAEAC,GAII,EALJC,MAKI,EAJJD,KAEAE,GAEI,EAHJC,UAGI,EAFJD,UACAE,EACI,EADJA,MAEA,OACE,UAAC5C,EAAD,YACE,UAACM,GAAD,YACE,SAACL,EAAD,CAAO4C,IAAKN,EAAUO,IAAI,MAC1B,UAACvC,GAAD,YACE,wBAAK4B,KACL,UAAC9B,GAAD,YACE,UAACH,EAAD,YACE,SAACE,GAAD,qBACA,SAACA,GAAD,UAAOlB,QAET,UAACgB,EAAD,YACE,SAACE,GAAD,yBACA,SAACA,GAAD,UAAOgC,QAET,UAAClC,EAAD,YACE,SAACE,GAAD,sBACA,SAACA,GAAD,UAAOiC,QAET,UAACnC,EAAD,YACE,SAACE,GAAD,yBACA,SAACA,GAAD,UAAOkC,QAET,UAACpC,EAAD,YACE,SAACE,GAAD,wBACA,SAACA,GAAD,UAAOoC,QAET,UAACtC,EAAD,YACE,SAACE,GAAD,sBACA,SAACA,GAAD,UAAOwC,EAAMG,YAEf,UAAC7C,EAAD,YACE,SAACE,GAAD,sBACA,SAACA,GAAD,UAAOwC,EAAMI,qBAKrB,UAAC7C,GAAD,CAAqB8C,QAAM,EAA3B,WACE,SAAC7C,GAAD,yBACA,SAACA,GAAD,UAAOsC,QAET,UAAClC,GAAD,YACE,SAACC,GAAD,uBACA,UAACA,GAAD,CACEE,MAAI,EACJe,GAAIQ,EACJrC,QAAS0B,EACTX,SAAO,EACPsC,UAAQ,EALV,oBAQE,SAACrC,GAAD,CACEgC,IAAKM,EAAQ,gBApDCjB,EA0DzB,IAIH,OAAO,8BAAGF,GACX,CCjGD,IAqFA,GArF0B,WAAO,IAAD,EAC9B,GAAkC3D,EAAAA,EAAAA,UAAS,IAA3C,eAAO+E,EAAP,KAAkBC,EAAlB,KACQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAYvC,EAAAA,EAAAA,IAAYwC,EAAAA,IACxBzC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBwC,GAAQzC,EAAAA,EAAAA,IAAY0C,EAAAA,IACpBC,GAAU3C,EAAAA,EAAAA,IAAY4C,EAAAA,IACtB1C,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9B,GAA+C0C,EAAAA,EAAAA,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,UAEjC,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAE3C,GAA8BjG,EAAAA,EAAAA,UAC5BkG,OAAOC,WAAW,sBAAsBC,SAD1C,eAAOA,EAAP,KAAgBC,EAAhB,KAGMrD,GAAWC,EAAAA,EAAAA,OAEjBqD,EAAAA,EAAAA,YAAU,WACJrB,EAEAjC,EADY,KAAVgD,GACOO,EAAAA,EAAAA,IAAa,CAAEtB,aAAAA,EAAce,MAAOA,KAEpCO,EAAAA,EAAAA,IAAa,CAAEtB,aAAAA,KAGtBtC,IACF6D,QAAQC,IAAI,yHACZzD,GAAS0D,EAAAA,EAAAA,QAIT/D,GACFK,GAAS2D,EAAAA,EAAAA,OAGXT,OACGC,WAAW,sBACXS,iBAAiB,UAAU,SAAAvG,GAAC,OAAIgG,EAAWhG,EAAE+F,QAAjB,GAChC,GAAE,CAACpD,EAAUiC,EAAce,EAAOrD,IAuBnC,OAFAuD,OAAOU,iBAAiB,SAfA,SAAAvG,GACtB,GAA6B,eAAzBA,EAAE+C,OAAOyD,YAA8B,CACzC,GAAItB,EAAQhE,OAAS,EAAG,CACtB,IAAM+B,EAASiC,EAAQuB,QAAO,SAAAC,GAAI,OAAIA,EAAKlD,MAAQxD,EAAE+C,OAAOC,EAA1B,IAClC2B,EAAa1B,EACd,KAAM,CACL,IAAM0D,EAAkBlE,EAAUgE,QAChC,SAAAC,GAAI,OAAIA,EAAKlD,MAAQxD,EAAE+C,OAAOC,EAA1B,IAEN2B,EAAagC,EACd,CACDpB,GACD,CACF,KAKC,+BACE,UAAClE,EAAD,YACE,SAACuF,EAAA,EAAD,CAAUnD,MAAO,4BACjB,SAAC,EAAD,CAAe/D,SAzBA,SAAAE,GACnB8F,EAAgB,CAAEC,MAAO/F,GAC1B,KAwBK,UAAC,EAAD,YACE,SAACiH,EAAA,EAAD,IACCd,IAAW,SAACe,EAAA,EAAD,QAEZf,IAAW,SAACgB,EAAA,EAAD,KACXjC,IAAa,SAAC,KAAD,IACdO,IACC,SAAC2B,EAAA,EAAD,CAAOC,aAAc3B,EAArB,UACE,SAAClD,GAAD,CAAeC,OAAQqC,EAAWuC,aAAc3B,MAInDN,IAAS,6DAIjB,C","sources":["components/Notices/NoticesSearch/NoticesSearch.styled.jsx","components/Notices/NoticesSearch/NoticesSearch.jsx","pages/NoticesPage/NoticiesPage.styled.jsx","components/ReadMoreModal/ReadMoreModal.styled.jsx","components/ReadMoreModal/ReadMoreModal.jsx","pages/NoticesPage/NoticesLayoutPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'styles/theme';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 28px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  // &:hover > svg {\n  //   fill: ${theme.colors.accent};\n  // }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border: 1px solid transparent;\n  border-radius: 40px;\n  padding: 13px 40px 13px 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n  }\n\n  &:hover,\n  :focus {\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: transparent;\n  width: 24px;\n  height: 24px;\n`;\n","import { useState } from 'react';\nimport { Form, Input, BtnSearch, Label, Wrapper } from './NoticesSearch.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { RxCross1 } from 'react-icons/rx';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst NoticesSearch = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [changeInput, setChangeInput] = useState('search');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (changeInput === 'search') {\n      if (searchQuery.trim() === '') {\n        Notify.failure('Sorry, enter your query');\n        return;\n      }\n    }\n    onSubmit(searchQuery);\n    setChangeInput('search');\n    // setSearchQuery('');\n  };\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Wrapper style={{ position: 'relative' }}>\n        <Label htmlFor=\"searchQuery\" />\n        <Input\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          // autoFocus\n          placeholder=\"Search\"\n          onChange={handleChange}\n          value={searchQuery}\n        />\n        <div style={{ position: 'absolute', right: '12px', top: '10px' }}>\n          {Boolean(searchQuery.length > 0) ? (\n            <BtnSearch type=\"submit\">\n              <RxCross1 onClick={() => setChangeInput('erase')} />\n            </BtnSearch>\n          ) : (\n            <BtnSearch type=\"submit\">\n              <AiOutlineSearch size={20} />\n            </BtnSearch>\n          )}\n        </div>\n      </Wrapper>\n    </Form>\n  );\n};\n\nexport default NoticesSearch;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  position: relative;\n  margin-bottom: 100px;\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 200px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  @media screen and (min-width: 320px) {\n    margin-bottom: 18px;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    margin-bottom: 44px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { theme } from \"styles/theme\";\n\nexport const ModalBackground = styled.div`\n  background-color: white;\n  padding: 40px 20px;\n  border-radius: 20px;\n  @media (min-width: 768px) {\n\n  }\n`;\n\nexport const Image = styled.img`\n  border-bottom-left-radius: 40px; \n  border-bottom-right-radius: 40px;\n  margin-bottom: 16px;\n  @media (min-width: 768px) {\n    margin-right: 20px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  text-align: center;\n`;\n\nexport const ModalTextWrapper = styled.div`\n  display: flex;\n  @media (min-width: 768px) {\n    margin-right: 75px;\n  }\n`;\n\nexport const ModalCommentWrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Text = styled.p`\n  width: 50%;\n  &:not(:last-child) {\n    amrgin-bottom: 8px;\n  }\n`;\n\nexport const FieldText = styled.div`\n  margin-bottom: 28px;\n`;\n\nexport const TabletWrapper = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n  }\n`;\n  \nexport const TabletTextWrapper = styled.div`\n\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media(min-width: 768px) {\n    display:flex;\n    flex-direction: row;\n    justify-content: flex-end;\n  }\n`;\n\nexport const ModalButton = styled.button`\n  display: ${props => props.icon ? \"flex\" : \"block\"};\n  justify-content: center;\n  align-items: center;\n\n  padding: 9px 87px;\n  border-radius: 40px;\n  background-color: ${theme.colors.accent};\n  background-color: ${props => props.outline ? \"white\" : `${theme.colors.accent}`};\n  border: 2px solid ${theme.colors.accent};\n  @media (max-width: 767px) {\n    &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  }\n  @media (min-width: 768px) {\n    display: flex;\n    align-items: center;\n  padding: 9px 45px;\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n  }\n  &:hover, &:focus {\n    background-color: ${props => props.outline ? `${ theme.colors.accent }` : \"#FF6101\"};\n    border: 2px solid ${props => props.outline ? `${theme.colors.accent}` : \"#FF6101\"};\n  }\n  &::before{\n    position: absolute;\n    background-image: ;\n  }\n`;\n\nexport const HeartIcon = styled.img`\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLogin } from 'redux/auth/auth-selectors';\nimport {\n  addToFavorite,\n  deleteFromFavorites,\n} from 'redux/notices/notices-operation';\nimport {\n  //  selectOneNotice,\n  selectFavorites,\n} from 'redux/notices/notices-selectors';\nimport {\n  ModalBackground,\n  Image,\n  ModalTextWrapper,\n  Text,\n  FieldText,\n  ModalCommentWrapper,\n  TabletWrapper,\n  TabletTextWrapper,\n  ButtonWrapper,\n  ModalButton,\n  HeartIcon,\n} from './ReadMoreModal.styled';\nimport { Notify } from 'notiflix';\n//import { AddButton } from 'components/UserPage/PetsData/PetsData.styled';\n\nexport default function ReadMoreModal({ notice }) {\n  //  const oneNotice = useSelector(selectOneNotice);\n  const isLoggedIn = useSelector(selectIsLogin);\n  const favorites = useSelector(selectFavorites);\n  const dispatch = useDispatch();\n\n  const handleAddClick = e => {\n    if (isLoggedIn) {\n      const cardId = e.target.id;\n      const result = favorites.find(favorite => favorite === cardId);\n      if (result === cardId) {\n        dispatch(deleteFromFavorites(cardId));\n      } else {\n        dispatch(addToFavorite(cardId));\n      }\n    } else Notify.warning('Sorry, you should to sing in');\n  };\n\n  const elements = notice.map(\n    ({\n      _id,\n      title,\n      name,\n      dateOfBirth,\n      breed,\n      location,\n      petImage,\n      price,\n      sex,\n      updatedAt,\n      comments,\n      owner,\n    }) => {\n      return (\n        <ModalBackground key={_id}>\n          <TabletWrapper>\n            <Image src={petImage} alt=\"\" />\n            <TabletTextWrapper>\n              <h2>{title}</h2>\n              <FieldText>\n                <ModalTextWrapper>\n                  <Text>Name:</Text>\n                  <Text>{name}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>Birthday:</Text>\n                  <Text>{dateOfBirth}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>Breed:</Text>\n                  <Text>{breed}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>Location:</Text>\n                  <Text>{location}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>The sex:</Text>\n                  <Text>{sex}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>Email:</Text>\n                  <Text>{owner.email}</Text>\n                </ModalTextWrapper>\n                <ModalTextWrapper>\n                  <Text>Phone:</Text>\n                  <Text>{owner.phone}</Text>\n                </ModalTextWrapper>\n              </FieldText>\n            </TabletTextWrapper>\n          </TabletWrapper>\n          <ModalCommentWrapper margin>\n            <Text>Comments:</Text>\n            <Text>{comments}</Text>\n          </ModalCommentWrapper>\n          <ButtonWrapper>\n            <ModalButton>Contact</ModalButton>\n            <ModalButton\n              icon\n              id={_id}\n              onClick={handleAddClick}\n              outline\n              noMargin\n            >\n              Add to\n              <HeartIcon\n                src={require('../../images/readModal/heart.png')}\n              ></HeartIcon>\n            </ModalButton>\n          </ButtonWrapper>\n        </ModalBackground>\n      );\n    }\n  );\n  // const { title, name, dateOfBirth, breed, location, petImage, price, sex, updatedAt, comments, owner } = oneNotice[0];\n\n  return <>{elements}</>;\n}\n","import NoticesSearch from 'components/Notices/NoticesSearch/NoticesSearch';\nimport NoticesCategoriesNav from 'components/Notices/NoticesCategoriesNav/NoticesCategoriesNav';\nimport Headline from 'components/Headline/Headline';\nimport AddNoticeButton from 'components/Notices/AddNoticeButton/AddNoticeButton';\nimport AddNoticeButtonMobile from 'components/Notices/AddNoticeButton/AddNoticeButtonMobile';\nimport { Container, Wrapper } from './NoticiesPage.styled';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchFavoritesNotices,\n  fetchNotices,\n  fetchUserNotices,\n} from 'redux/notices/notices-operation';\nimport { Outlet, useParams, useSearchParams } from 'react-router-dom';\nimport {\n  // selectNotices,\n  selectIsLoading,\n  selectError,\n  selectNotices,\n  selectFavorites,\n} from 'redux/notices/notices-selectors';\nimport { selectIsLogin } from 'redux/auth/auth-selectors';\nimport useModal from 'hooks/modal';\nimport Modal from 'components/Modal/Modal';\nimport ReadMoreModal from 'components/ReadMoreModal/ReadMoreModal';\n\nconst NoticesLayoutPage = () => {\n  const [oneNotice, setOneNotice] = useState([]);\n  const { categoryName } = useParams();\n  const isLoading = useSelector(selectIsLoading);\n  const isLoggedIn = useSelector(selectIsLogin);\n  const error = useSelector(selectError);\n  const notices = useSelector(selectNotices);\n  const favorites = useSelector(selectFavorites);\n  const { isModalOpen, closeModal, openModal } = useModal();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [matches, setMatches] = useState(\n    window.matchMedia('(min-width: 768px)').matches\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (categoryName) {\n      if (query !== '') {\n        dispatch(fetchNotices({ categoryName, query: query }));\n      } else {\n        dispatch(fetchNotices({ categoryName }));\n      }\n    } else {\n      if (isLoggedIn) {\n        console.log('идем зя юзера нотисами');\n        dispatch(fetchUserNotices());\n      }\n    }\n\n    if (isLoggedIn) {\n      dispatch(fetchFavoritesNotices());\n    }\n\n    window\n      .matchMedia('(min-width: 768px)')\n      .addEventListener('change', e => setMatches(e.matches));\n  }, [dispatch, categoryName, query, isLoggedIn]);\n\n  const onFormSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  const handleMoreClick = e => {\n    if (e.target.textContent === 'Learn more') {\n      if (notices.length > 0) {\n        const result = notices.filter(item => item._id === e.target.id);\n        setOneNotice(result);\n      } else {\n        const resultFavorites = favorites.filter(\n          item => item._id === e.target.id\n        );\n        setOneNotice(resultFavorites);\n      }\n      openModal();\n    }\n  };\n\n  window.addEventListener('click', handleMoreClick);\n\n  return (\n    <>\n      <Container>\n        <Headline title={'Find your favorite pet'}></Headline>\n        <NoticesSearch onSubmit={onFormSubmit} />\n        <Wrapper>\n          <NoticesCategoriesNav />\n          {matches && <AddNoticeButton />}\n        </Wrapper>\n        {!matches && <AddNoticeButtonMobile />}\n        {!isLoading && <Outlet />}\n        {isModalOpen && (\n          <Modal onCloseModal={closeModal}>\n            <ReadMoreModal notice={oneNotice} onCloseModal={closeModal} />\n          </Modal>\n        )}\n        {/* {isLoading && <p>...loading</p>} */}\n        {error && <p>Ooops... Something went wrong</p>}\n      </Container>\n    </>\n  );\n};\n\nexport default NoticesLayoutPage;\n"],"names":["Form","styled","Wrapper","theme","Label","Input","BtnSearch","onSubmit","useState","searchQuery","setSearchQuery","changeInput","setChangeInput","e","preventDefault","trim","Notify","style","position","htmlFor","type","name","autoComplete","placeholder","onChange","currentTarget","value","toLowerCase","right","top","Boolean","length","onClick","size","Container","ModalBackground","Image","ModalTextWrapper","ModalCommentWrapper","Text","FieldText","TabletWrapper","TabletTextWrapper","ButtonWrapper","ModalButton","props","icon","outline","HeartIcon","ReadMoreModal","notice","isLoggedIn","useSelector","selectIsLogin","favorites","selectFavorites","dispatch","useDispatch","handleAddClick","cardId","target","id","result","find","favorite","deleteFromFavorites","addToFavorite","elements","map","_id","title","dateOfBirth","breed","location","petImage","sex","price","comments","updatedAt","owner","src","alt","email","phone","margin","noMargin","require","oneNotice","setOneNotice","categoryName","useParams","isLoading","selectIsLoading","error","selectError","notices","selectNotices","useModal","isModalOpen","closeModal","openModal","useSearchParams","searchParams","setSearchParams","query","get","window","matchMedia","matches","setMatches","useEffect","fetchNotices","console","log","fetchUserNotices","fetchFavoritesNotices","addEventListener","textContent","filter","item","resultFavorites","Headline","NoticesCategoriesNav","AddNoticeButton","AddNoticeButtonMobile","Modal","onCloseModal"],"sourceRoot":""}