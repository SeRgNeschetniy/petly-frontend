{"version":3,"file":"static/js/737.0329f6a4.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm/FirstStep.jsx","components/Auth/RegisterForm/SecondStep.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Input,\n  Button,\n  Form,\n  InputField,\n  Title,\n  LinkText,\n  StyledLink,\n} from '../Auth.styled';\nimport { Notify } from 'notiflix';\n\nexport default function FirstStep({\n  setSecondPage,\n  setRegisterState,\n  registerState,\n}) {\n  const notifyOptions = {\n    showOnlyTheLastOne: true,\n    timeout: 2000,\n  };\n\n  const firstStepValidation = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required'),\n    password: Yup.string().required('Require').min(7),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), ''], 'Password must match')\n      .required('Require'),\n  });\n\n  return (\n    <Formik\n      initialValues={registerState}\n      validationSchema={firstStepValidation}\n      onSubmit={values => {\n        setRegisterState(prevState => {\n          return {\n            ...prevState,\n            email: values.email,\n            password: values.password,\n            confirmPassword: values.confirmPassword,\n          };\n        });\n        setSecondPage(true);\n      }}\n    >\n      {props => (\n        <Form onSubmit={props.handleSubmit}>\n          <Title>Registration</Title>\n          <InputField>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.email}\n            />\n            {props.isSubmitting && props.errors.email\n              ? Notify.failure(props.errors.email, notifyOptions)\n              : null}\n          </InputField>\n          <InputField>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.password}\n            />\n            {props.isSubmitting && props.errors.password\n              ? Notify.failure(props.errors.password, notifyOptions)\n              : null}\n          </InputField>\n          <InputField margin>\n            <Input\n              id=\"confirmPassword\"\n              type=\"password\"\n              name=\"confirmPassword\"\n              placeholder=\"Confirm password\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.confirmPassword}\n            />\n            {props.isSubmitting && props.errors.confirmPassword\n              ? Notify.failure(props.errors.confirmPassword, notifyOptions)\n              : null}\n          </InputField>\n          <Button margin type=\"submit\" handleClick={props.handleSubmit}>\n            Next\n          </Button>\n          <LinkText>\n            Already have an account? <StyledLink to=\"/login\">Login</StyledLink>\n          </LinkText>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Input, Button, Form, InputField, LinkText, StyledLink } from '../Auth.styled';\nimport { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/auth-operation';\nimport { Title } from '../Auth.styled';\nimport { Notify } from 'notiflix';\n\nexport default function SecondStep({ setSecondPage, setRegisterState, registerState }) {\n  const dispatch = useDispatch();\n\n    const notifyOptions = {\n    showOnlyTheLastOne: true,\n    timeout: 2000,\n  }\n\n  const secondStepValidation = Yup.object({\n    name: Yup.string().min(2).required('Required'),\n    city: Yup.string().min(2).required('Required'),\n    phone: Yup.string().required('Required'),\n  });\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, city, phone } = e.target;\n    \n    const { email, password } = registerState;\n    const data = { email, password, name: name.value, city: city.value, phone: phone.value };\n    dispatch(signup(data));\n  }\n\n  return (\n    <Formik\n      initialValues={registerState}\n      validationSchema={secondStepValidation}\n      onSubmit={\n        values => {\n          setRegisterState(prevState => {\n          return {\n            ...prevState,\n            name: values.name,\n            city: values.city,\n            phone: values.phone\n          }\n          });\n          setSecondPage(false);\n      }\n      }\n    >\n      {props => (\n        <Form onSubmit={handleSubmit}>\n          <Title>Registration</Title>\n          <InputField>\n            <Input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.name}\n            />\n            {props.isSubmitting && props.errors.name ? Notify.failure(props.errors.name, notifyOptions) : null}\n          </InputField>\n          <InputField>\n            <Input\n              id=\"city\"\n              type=\"text\"\n              name=\"city\"\n              placeholder=\"City/Region\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.city}\n            />\n            {props.isSubmitting && props.errors.city ? Notify.failure(props.errors.city, notifyOptions) : null}\n          </InputField>\n          <InputField margin>\n            <Input\n              id=\"phone\"\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Phone number\"\n              onBlur={props.handleBlur}\n              onChange={props.handleChange}\n              value={props.values.phone}\n            />\n            {props.isSubmitting && props.errors.phone ? Notify.failure(props.errors.phone, notifyOptions) : null}\n          </InputField>\n          <Button type=\"submit\">Registration</Button>\n          <Button outline margin submit type=\"button\" onClick={props.handleSubmit}>Back</Button>\n          <LinkText>Already have an account? <StyledLink to=\"/login\">Login</StyledLink></LinkText>\n        </Form>\n      )}\n      </Formik>\n)}\n","import { useState } from 'react';\nimport { BackgroundContainer } from '../../components/Auth/Auth.styled';\nimport FirstStep from '../../components/Auth/RegisterForm/FirstStep';\nimport SecondStep from '../../components/Auth/RegisterForm/SecondStep';\nimport { selectIsLogin } from 'redux/auth/auth-selectors';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\n\nexport default function RegisterPage() {\n  const [secondPage, setSecondPage] = useState(false);\n\n  const [registerState, setRegisterState] = useState({\n    email: '',\n    password: '',\n    name: '',\n    city: '',\n    phone: '',\n    confirmPassword: '',\n  });\n\n  let Child = undefined;\n  if (!secondPage) {\n    Child = (\n      <FirstStep\n        registerState={registerState}\n        setRegisterState={setRegisterState}\n        setSecondPage={setSecondPage}\n      />\n    );\n  } else {\n    Child = (\n      <SecondStep\n        registerState={registerState}\n        setRegisterState={setRegisterState}\n        setSecondPage={setSecondPage}\n      />\n    );\n  }\n\n  const isLogin = useSelector(selectIsLogin);\n\n  if (isLogin) {\n    return <Navigate to=\"/user\" />;\n  }\n\n  return (\n    <>\n      <BackgroundContainer>\n        {Child}\n      </BackgroundContainer>\n    </>\n  );\n}\n"],"names":["FirstStep","setSecondPage","setRegisterState","registerState","notifyOptions","showOnlyTheLastOne","timeout","firstStepValidation","Yup","email","required","password","min","confirmPassword","oneOf","initialValues","validationSchema","onSubmit","values","prevState","props","handleSubmit","id","type","name","placeholder","onBlur","handleBlur","onChange","handleChange","value","isSubmitting","errors","Notify","margin","handleClick","to","SecondStep","dispatch","useDispatch","secondStepValidation","city","phone","e","preventDefault","target","data","signup","outline","submit","onClick","RegisterPage","useState","secondPage","Child","undefined","useSelector","selectIsLogin"],"sourceRoot":""}